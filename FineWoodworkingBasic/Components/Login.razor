@using System.Text.RegularExpressions;
@using System.ComponentModel.DataAnnotations;

<MudPaper Class="pa-5" Elevation="4" style="border-radius: 30px 0px 30px 30px">
    <MudForm @ref="Form" @bind-IsValid="@Success" @bind-Errors="@Errors">
        <MudText Typo="Typo.h1" Class="justify-center" Style="font-size: 25px; font-weight: bold; left: 100px">Login,</MudText>

        <MudTextField
            T = "string"
            Label="Email"
            Class="mb-2"
            Style="width: 300px;"
            Variant="Variant.Text"
            Adornment="Adornment.End"
            AdornmentIcon="@EmailIcon"
            Required="true"
            RequiredError="Must have an email!">
        </MudTextField>

        <MudTextField
            T = "string"
            @ref="PasswordField1"
            Label="Password"
            Class="mb-2"
            Style="width: 300px;"
            Variant="Variant.Text"
            InputType="@PasswordInput"
            Adornment="Adornment.End"
            AdornmentIcon="@PasswordInputIcon"
            OnAdornmentClick="ShowPassword"
            AdornmentAriaLabel="Show Password"
            Required="true"
            RequiredError="Must have an password">
        </MudTextField>


        <MudButton 
            OnClick="Submit"
            Variant="Variant.Outlined" 
            Style="left: 125px; broder-radius: 30px;"
            Class="mt-3 rounded-30"
            Color="Color.Primary" 
            Disabled="@(!Success)">
            Login
        </MudButton>

    </MudForm>
</MudPaper>

@code {

    [Parameter] public EventCallback<string> OnClick {get; set;}
    MudForm Form;
    bool Success;
    string[] Errors = {};


    // Email
    string EmailIcon = Icons.Material.Filled.Email;


    // Password
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    InputType PasswordInput = InputType.Password;
    MudTextField<string> PasswordField1;
    bool isShow;


    // Show password on click of icon
    void ShowPassword()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    void Submit()
    {
        OnClick.InvokeAsync();
    }
}
