@page "/add-lumber"
@using FineWoodworkingBasic.Service
@using FineWoodworkingBasic.Model
@using System.ComponentModel.DataAnnotations
@inject AddLumberService svc
@inject AllStateInfoService FullState

<PageTitle>Add Lumber</PageTitle>
<EditForm Model="model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudCard>
        <MudPaper>
            <MudCardContent>
                <MudText Align="Align.Center" Typo="Typo.h5">Add Lumber</MudText>
                <MudDivider DividerType="DividerType.Middle" Light="true" />
                <br />

                <MudTextField T="string" Label="Lumber Name" Clearable="true" Counter="50" Immediate="true" Variant="Variant.Text" AutoGrow="true"
                              @bind-Value="model.Name" Validation="@(new Func<string, IEnumerable<string>>(MaxFiftyCharacters))" />

                <MudAutocomplete T="string" @bind-Value="model.WoodSpeciesName" Variant="Variant.Text" Label="Wood Species" AnchorOrigin="Origin.BottomCenter"
                                 SearchFunc="@SearchLumber" For="@(() => model.WoodSpeciesName)" MaxItems="@woodSpeciesCollectionSize" />

                <MudStack Row="true">
                    <MudNumericField @bind-Value="model.Length" Clearable="true" Label="Length" Variant="Variant.Text" Min="0" MaxLength="7" />
                    <MudNumericField @bind-Value="model.Width" Label="Width" Clearable="true" Variant="Variant.Text" Min="0" MaxLength="7" />
                    <MudNumericField @bind-Value="model.Thickness" Label="Thickness" Clearable="true" Variant="Variant.Text" Min="0" MaxLength="7" />
                </MudStack>

                <MudTextField T="string" Label="Notes" Clearable="true" Counter="2000" Immediate="true" Variant="Variant.Text"
                              @bind-Value="model.Notes" Validation="@(new Func<string, IEnumerable<string>>(MaxTwoThouCharacters))" />

                <MudNumericField @bind-Value="model.Quantity" Label="Quantity" Variant="Variant.Text" Min="1" MaxLength="5" />


            </MudCardContent>
        </MudPaper>
        <MudCard>
            <header>Location Info</header>
            <MudCardContent>
                <MudAutocomplete T="string" @bind-Value="model.Area" Clearable="true" Counter="10" Immediate="true" Variant="Variant.Text" Label="Area" AnchorOrigin="Origin.BottomCenter"
                                 CoerceText="true" CoerceValue="false" SearchFunc="@SearchArea" For="@(() => model.Area)" />
                <MudAutocomplete T="string" @bind-Value="model.Locus" Clearable="true" Counter="10" Immediate="true" Variant="Variant.Text" Label="Locus" AnchorOrigin="Origin.BottomCenter"
                                 CoerceText="true" CoerceValue="false" SearchFunc="@SearchLocus" For="@(() => model.Locus)" />
            </MudCardContent>
        </MudCard>
        <MudCardActions>
            @*Clear Button*@
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="ClearAll"
                       Class="mr-3 ml-2">
                @if (spin)
                {
                    <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
                }
                else
                {
                    <MudText>Clear</MudText>
                }
            </MudButton>

            @*Submit Button with loading *@
            <MudButton ButtonType="ButtonType.Submit" DisableElevation="true" Variant="Variant.Filled" Color="Color.Primary">
                @if (spin)
                {
                    <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
                }
                else
                {
                    <MudText>Add</MudText>
                }
            </MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>
